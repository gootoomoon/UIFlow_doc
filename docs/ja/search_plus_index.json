{"./":{"url":"./","title":"UIFlow","keywords":"","body":"UIFlow ようこそ UIFlow へ！flow.m5stack.com UIFlowとは： Webベースのプログラミングツール ビジュアルプログラミング言語Blockly BlocklyとPythonを切り替え可能 "},"ja/base/Update.html":{"url":"ja/base/Update.html","title":"ファームウェア更新","keywords":"","body":"ファームウェア更新 For Window ドライバダウンロード m5stack.comにアクセスし、自分の使用しているOSに合わせてドライバをダウンロードします。CP210X驱动程序 ドライバインストール ダウンロードしたファイルを解凍し、自分の使用しているOSのビット数を確認してインストールします。(32bit x86版、64bit x64版) ————————————————————————————————— M5Burnerダウンロード flow.m5stack.comにアクセスし、ファームウェア書き込みツールをダウンロードします。M5Burner烧录工具 ファームウェア書き込み ダウンロードしたファイルを解凍し、Burner書き込みツールを実行します。シリアル通信に使用するCOMポートとBaud(ボーレート: 921600)を選択します。 For Mac Coming soon.... "},"ja/base/Setting_WIFI.html":{"url":"ja/base/Setting_WIFI.html","title":"Wi-Fi設定","keywords":"","body":"Wi-Fi設定 UIFlowとM5GOはそれぞれ独立したユニットです。UIFlowでプログラムを作成し、M5GOに送信したい場合は、それらの間の接続を確立する必要があります。 起動直後のWi-Fi設定 M5GOの電源ボタンをクリックしてオンにし、ロゴが画面に表示されたら「SETUP」を選択し、「Change WIFI Connect」をクリックしてから、スマートフォンで画面に表示されているSSIDのアクセスポイントに接続します。 Wi-Fi情報の登録 スマートフォンで接続成功後、二次元コードをスキャンするか、直接ブラウザを開いて 192.168.4.1 にアクセスします。そしてWi-Fi情報を入力し、M5GOをあなたが普段使用しているネットワークに接続します。 "},"ja/base/setting_APIkey.html":{"url":"ja/base/setting_APIkey.html","title":"API Key設定","keywords":"","body":"API Key設定 Wi-Fi接続 M5GOを起動したら、メニューから「UPLOAD」を選択し、Wi-Fiに接続後、画面右上のシグナルが赤から緑に変わるのを待ちます。（この図ではM5GOは接続成功）、タブレットを用いて二次元コードをスキャンするかブラウザから直接UIFlowflow.m5stack.comにアクセスします。 API Keyの登録 UIFlowにアクセスし、ページの右上にあるメニューバーから設定をクリックします。M5GO本体に表示されているAPI Keyを登録し、OKをクリックして保存し、接続が成功するまでしばらく待ちます。 "},"ja/base/UIFlow.html":{"url":"ja/base/UIFlow.html","title":"UIFlowレイアウト","keywords":"","body":"UIFlowレイアウト UIFlowのレイアウト5大部分 エディタ ブロックリストのBlockを右側のエディタにドラッグして、プログラミングします。 メニューバー メニューバーにはいくつかの基本的な操作が配置されています。（例題サンプル、アンドゥ、リドゥ、実行、プログラムのダウンロード、リモコンページの二次元コード表示等） BlocklyPython切り替え いつでもBlocklyとPythonコードを切り替えることができます。 UIエディタ 左上からUIオブジェクトをドラッグしてUIエディタに配置します。UIオブジェクトにはラベルや図形などがあります。 Units 外付けの各Unitに対応したブロックをブロックリストに追加します。 "},"ja/base/Run_Program.html":{"url":"ja/base/Run_Program.html","title":"実行・アップロード手順","keywords":"","body":"実行とアップロードの手順 実行手順 プログラミングエリアでプログラムを作成した後に、画面右上の実行ボタンをクリックすると，プログラムがM5GOにプッシュされ、すぐさま実行されます。 アップロード手順 アップロードではM5GO内にプログラムが保存されますが、実行では保存されません。実行はプログラムの動きを確認する際によく使用されます。アップロードをすると、インターネットへ接続していなくても、M5GOだけで作成したプログラムを利用することができます。 "},"ja/Start_programming/Start_programming.html":{"url":"ja/Start_programming/Start_programming.html","title":"プログラミングの第一歩","keywords":"","body":"プログラミングを始めよう 前章で学んだあなたは、UIFlowの基本的な操作を理解しました。さぁ、プログラミングを始めましょう！ "},"ja/Start_programming/Program_structure.html":{"url":"ja/Start_programming/Program_structure.html","title":"プログラムの構造","keywords":"","body":"プログラムの構造 Setupブロック UIFlowを開くと、最初にSetupブロックがあるのがわかります。プログラムは必ず、Setupブロックから開始され、1度だけ実行されます。 Loopブロック Loopは無限ループブロックです。実行されると、何らかのイベントが発生して停止するまで、ブロックに含まれるプログラムが無限に繰り返し実行されます。 プログラムの接続 ジグソーパズルのように、ブロック間の凸凹を使用して異なるブロック同士を接続することができます。 プログラムの実行順序 プログラムは上から下に向かって実行されます。プログラムが開始されるとSetupブロックが一度だけ実行され、その後Loopがブロックが繰り返し実行されます。 "},"ja/Start_programming/Button.html":{"url":"ja/Start_programming/Button.html","title":"Button","keywords":"","body":"Button 機能説明 M5GOは3つのボタン（A,B,C）を提供します。Buttonブロックを使用してコントロールすることができます。 Button M5GOの物理ボタンを押された際の処理を制御できます。 Buttonの状態 ボタンの状態を取得できます。 使用方法 ボタンを押した後に実行する必要のある処理をボタンブロック内に入れ、対応するボタンを変更します。 "},"ja/Start_programming/Wait.html":{"url":"ja/Start_programming/Wait.html","title":"Wait","keywords":"","body":"Wait 機能説明 WaitはTimerの中のブロックです。Waitする時間を自由に設定することができます。 Wait プログラムを指定した時間だけ、一時停止させることができます。 使用方法 Waitブロックを一時停止させたい場所に配置し、実行します。 "},"ja/Hardwares/Hardwares.html":{"url":"ja/Hardwares/Hardwares.html","title":"ハードウェア制御","keywords":"","body":"ハードウェア "},"ja/Hardwares/Speaker.html":{"url":"ja/Hardwares/Speaker.html","title":"Speaker","keywords":"","body":"Speaker 機能説明 Speakerを操作して音を鳴らすことができます。Speaker Blockを使用すると、音の周波数、鳴動時間、音量、ピッチ、ビートをコントロールできます。 Speaker.beep 鳴動時間を指定できます。 Speaker.volume 音量を指定できます。 play.tone 音階を指定できます。 Tips 一般的に人間の可聴域は20~20KHzの間です。もしこれより低かったり、高かったりすると音を聞き取ることができません。 使用方法 Speaker Blockをプログラムに追加し、パラメータを変更して実行すると、M5GOから音が鳴ります。 "},"ja/Hardwares/RGB.html":{"url":"ja/Hardwares/RGB.html","title":"RGB","keywords":"","body":"RGB 機能説明 RGBブロックを使用すると、M5GOの側面のLEDバーをの色や明るさ、オンオフをコントロールすることができます。 Set Rgb Bar color 両側のLEDバーの色を変更することができます。 Set left side Rgb Bar color 片側のLEDバーの色を変更することができます。 Set the 1st Rgb colr LEDバーの各LEDごとの色を変更することができます。 Set Rgb brightness LEDバーの明るさを変更することができます。 使用方法 LEDバーの色を変更しながら光らせます。 "},"ja/Hardwares/IMU.html":{"url":"ja/Hardwares/IMU.html","title":"IMU","keywords":"","body":"IMU 機能説明 IMU BlockはM5GOの姿勢データを取得することができます。（X、Y、Z）の3つの傾きデータを取得することができ、M5GOの姿勢によって挙動をかえるようなプログラムを作ることができます。 Get X 前後（ピッチ）の傾きを取得します。 Get Y 左右（ロール）の傾きを取得します。 Get Z ヨーの回転角度を取得できます。 使用方法 取得したデータをそのまま表示したり、様々な条件判断の材料に使用することができます。 "},"ja/Display/Dispaly.html":{"url":"ja/Display/Dispaly.html","title":"画像表示","keywords":"","body":"図形表示 "},"ja/Display/Emoji.html":{"url":"ja/Display/Emoji.html","title":"Emoji","keywords":"","body":"Emoji 機能説明 簡単なドット絵を簡単に作成する為のブロックを提供します。各ドットの表示・非表示を簡単に編集できます。 Set emoji map in チェックしたマスを、指定した色で塗りつぶします。 Set line x row x in 絵文字内の指定した1マスを、指定した色で塗りつぶします。 使用方法 Emoji ブロックをエディタにドラッグして、塗りつぶしたいマスを選択します。 "},"ja/Display/UI.html":{"url":"ja/Display/UI.html","title":"幾何学図形","keywords":"","body":"幾何学図形 機能説明 UIFlowには図形を編集可能なブロックを備えています。それらを使うことでコントロールすることができます。 Title タイトルを表示します。 Label ラベルを表示します。 Rect 四角形を表示します。 Circle 円を表示します。 image 画像を表示します。 追加と削除 UIオブジェクトの追加 UIオブジェクトの削除 UIオブジェクトの編集 方法 1：UIオブジェクトを追加したら、UIオブジェクトをクリックすると表示されるプロパティボックスで、初期パラメータ（座標、色、長さ、幅など）を設定できます。 方法 2：UIオブジェクトを追加したら、UIブロックリストの中の対応するブロックを使用して、UIオブジェクトを操作します。 "},"ja/Display/image.html":{"url":"ja/Display/image.html","title":"image表示","keywords":"","body":"image画像表示 機能説明 ローカル画像を追加してスクリーンに表示します。（ファイル条件は、サイズ: 25KB以下、フォーマット: jpgまたはbmp） 画像追加 まずUIFlowのAPIKey設定を完了させている必要があります。UIFlowの接続が確認できたら、ページ右上にあるクラウド保存ボタンをクリックします。Images -> Add Image と選択し、お好みの画像をアップロードします。 画像表示 イメージ要素を画面にドラッグし、要素をクリックします。そして表示されるプロパティボックスで表示するイメージを選択します。 画像操作 プロパティボックスで画像を編集する以外にも、Imageブロックを利用してプログラムから操作することもできます。 "},"ja/Display/Graphic.html":{"url":"ja/Display/Graphic.html","title":"Graphic図","keywords":"","body":"Graphic図 機能説明 直接配置する図形に加えて、Graphicブロックを使用するとより複雑な図形を描画できます。 LCD clear スクリーンの内容をクリアします。 LCD fill スクリーンを指定した色で塗りつぶします。 LCD print x,y スクリーンの指定の位置にテキストを表示します。 Font フォントを設定します。 LCD pixel 指定の位置にピクセルを描画します。 line 指定の位置に線を描画します。 rect 指定の位置に四角形を描画します。 注意 M5GOのスクリーンの解像度は横320x縦240です。 使用方法 Graphicブロックを使用して、三角形を描画し、色を青色に変更します。 "},"ja/Logic/Logic.html":{"url":"ja/Logic/Logic.html","title":"条件分岐と論理式","keywords":"","body":"論理判断 "},"ja/Logic/if.html":{"url":"ja/Logic/if.html","title":"if文","keywords":"","body":"if分岐 機能説明 if分岐Blockを用いると、判定条件の成否に応じてプログラムを実行するか選択できます。 if 条件が真であるか判定し、真の場合はifブロック内の処理を実行します。 if else 条件が真であるか判定し、真の場合はifブロック内の処理を、偽の場合はelseブロック内の処理を実行します。 true ブール値のTrueです。 使用方法 if分岐Blockをプログラムの中に設置し、分岐条件を設定します。例：M5GOが起動している場合はLEDバーを点灯 "},"ja/Logic/logic_partA.html":{"url":"ja/Logic/logic_partA.html","title":"論理式","keywords":"","body":"論理式 機能説明 論理式はif分岐の条件判定によく利用されます。論理式の両側のデータ関係は正しいかを判定し、TrueまたはFalseの値に決定されます。 使用方法 データを使用して論理関係式を構築し、判定条件としてifブロックに接続します。例えば、ジャイロスコープのX座標が90より大きい場合、LEDバーが点灯します。 "},"ja/Logic/logic_partB.html":{"url":"ja/Logic/logic_partB.html","title":"論理演算","keywords":"","body":"論理演算 機能説明 Or、 And、Not条件を指定できます。 and 左右の論理関係式が どちらも真 の時、結果がTrueになります。それ以外はFalseになります。 or 左右の論理関係式が どちらか片方でも成立 した場合、結果がTrueになります。それ以外はFalseになります。 not 血kを即notTrue=False，notFalse=True 使用方法 論理式を両側に追加し、関係式を追加し、分岐によって処理を変更します。 "},"ja/Loops/Loops.html":{"url":"ja/Loops/Loops.html","title":"繰り返し処理","keywords":"","body":"繰り返し処理 "},"ja/Loops/repeatA.html":{"url":"ja/Loops/repeatA.html","title":"条件付き繰り返し","keywords":"","body":"条件付き繰り返し 機能説明 条件付き繰り返しは、特定の条件を満たす必要のある繰り返し処理を指します。設定した条件を満たす間は、ブロック内のプログラムの内容が実行されます。 repeat n time 繰り返し回数の間は繰り返し処理を行います。 repeat while 条件が真の間は繰り返し処理を行います。 使用方法 repaetを追加して、繰り返し回数（またはループ条件）を設定し、繰り返し処理を必要とするプログラムを追加します。 "},"ja/Loops/repeatB.html":{"url":"ja/Loops/repeatB.html","title":"イテレータ","keywords":"","body":"データ反復 機能説明 データの反復処理では、リストから順番に一つずつ要素を取り出して変数に代入し、ブロックの中の処理を実行します。 for each item i in list リストの内容をひとつずつ取り出して i に代入する毎に、ブロック内の処理を実行します。 count with i from a to b by c a から b まで値を c ずつ増加させ、i に代入する毎に、ブロック内の処理を実行します。 break out of loop 可以选择跳出整个循环，或跳出本次循环，当执行到该Block时执行跳出 繰り返しから抜けたり、関数から抜けたりすることができます。 使用方法 データ反復ブロックをエディタ領域に追加し、パラメータを設定後、繰り返し処理を実行します。例：LEDバーの明るさを0から100まで変更します。 "},"ja/Operation/Operation.html":{"url":"ja/Operation/Operation.html","title":"データ演算","keywords":"","body":"データ演算 "},"ja/Operation/Variables.html":{"url":"ja/Operation/Variables.html","title":"変数","keywords":"","body":"変数 変数とは？ 変数は値や式を入れることができる入れ物です。変数に名前をつけたり、データを格納したり、データを読み込んだり、変更したりできます。 変数の作成 Create variableをクリックし、変数の名前を入力し、変数を作成します。 変数の使用 例：変数Aに6を代入し、1秒後にAに2を加えます。 "},"ja/Operation/Math.html":{"url":"ja/Operation/Math.html","title":"基本演算","keywords":"","body":"算術演算 機能説明 Mathの中には加減剰余などの基本的な算術演算Blockがあります。 定数(リテラル) 好きな値を指定できます。 基本算術演算 加減剰余とべき乗です。 余り 剰余を求めます。 特殊数判断 奇数、偶数、素数、正数、負数、ある値で割れるかなどを判定し、TrueまたはFalseを返します。 リスト計算 リストの最大最小平均などを求めることができます。 使用方法 演算子の両側にデータを追加し、変数に値を代入し、結果を取得します。 "},"ja/Operation/Random.html":{"url":"ja/Operation/Random.html","title":"乱数","keywords":"","body":"乱数 機能説明 ゲームやアニメーションを作成するときにランダムな要素が必要なことがあります。必要に応じて乱数を生成する必要があります。 random fraction 実行するたびに0から1の間の乱数を生成します。 random integer 実行するたびに指定した範囲の間の乱数を生成します。 使用方法 定数で乱数の範囲を指定し、変数にランダムな値を代入します。 "},"ja/Operation/List.html":{"url":"ja/Operation/List.html","title":"配列","keywords":"","body":"リスト 機能説明 リストは順序を持ったデータのコレクションです。 length of リストの要素数を返します。 X is empty リスト内の要素数が0かどうかを判定します。 in list find リストから要素を検索します。要素が見つかったらそのインデックスを返します。 create empty list 空のリストを作成します。 create list with 自分で指定した要素をもつリストを作成します。 使用方法 create listでいくつかの要素を持つリストを作成し、データ反復処理で繰り返し処理をします。 "},"ja/Functions/Functions.html":{"url":"ja/Functions/Functions.html","title":"関数","keywords":"","body":"関数機能 関数とは？ 関数には名前をつけることができます。関数の中には実行されるひとかたまりの処理が入っており、関数を呼び出すことで、関数内部の処理が実行されます。関数を利用することでプログラムが簡潔になります。またプログラムの再利用性も高くなります。 関数の作成 Functionsをクリックし、関数ブロックをエディタ領域にドラッグします。関数の名前を変更し、関数ブロックの中に実行したい処理を追加します。 関数の使用 関数ブロックをエティタ領域に追加すると、関数呼び出しブロックが関数ブロックリスト内に表示され、利用できるようになります。 "},"ja/Remote/Remote.html":{"url":"ja/Remote/Remote.html","title":"遠隔制御","keywords":"","body":"リモートコントロール（遠隔制御） 機能説明 リモートコントロールを使用すると、パソコンやスマートフォンからM5GOを操作することができます。 Remote QRcode リモートコントロールページにアクセスするための二次元コードを生成して、M5GOのスクリーンに表示します。 Remote Switch リモートコントロールページにスイッチを追加できます。使用の際にはBlock上の設定をクリックし、変数Xを追加する必要があります。オンになると1が、オフになると0がXに代入されます。 Remote Button リモートコントロールページにボタンを追加できます。押すたびに一度だけ、ブロック内の処理が実行されます。 Remote Slider リモートコントロールページにスライダーを追加できます。使用の際にはBlock上の設定をクリックし、変数Xを追加する必要があります。スライダーを操作すると0〜100の間の値がXに代入されます。 Remote Label 情報をリモートコントロールページに表示することができます。 使用方法 二次元コードブロックを追加し、Remote Buttonブロックを追加します。ボタンを押された時に実行する処理をブロック内に配置して実行します。 リモートコントロールページ M5GOのスクリーン上の二次元コードをスキャンするか、またはUIFlowページ右上のリモートコントロールページ二次元コード表示をクリックし、リモートコントロールページに接続します。 "},"ja/MQTT/MQTT.html":{"url":"ja/MQTT/MQTT.html","title":"MQTT通信","keywords":"","body":"MQTT通信 MQTTとは？ MQTT（Message Queuing Telemetry Transport、メッセージキューイングテレメトリ伝送プロトコル）は出版/購読（publish/subscribe）型のモデルに基づいた\"軽量\"通信プロトコルです。 MQTTはTCP/IPプロトコル上に構築され、1999年にIBMによってリリースされました。 MQTTの最大のメリットは、プロトコルが軽量なために、非力なデバイスや不安定なネットワークを用いた際にも、リモートデバイスに対してリアルタイムに信頼性のあるメッセージサービスを提供することができます。 低オーバーヘッド、シンプルなプロトコルシーケンスのため、IoT（物のインターネット）、小型デバイス、モバイルなどに応用されています。 UIFlowとMQTT UIFlowでは、MQTTの機能を使用して、二つ以上のCORE間のデータ通信を実現することができ、それにより強力なリモートコントロール機能を実現する事が可能です。 "},"ja/MQTT/Broker.html":{"url":"ja/MQTT/Broker.html","title":"MQTTサーバ","keywords":"","body":"MQTTサーバ MQTTサービスの選択 MQTTを用いたデータのやりとりにはMQTTサーバ(ブローカー:Brokerと呼ぶ)が必要です。ここではサードパーティのMQTTサーバプラッットフォームの一つであるCloudMQTTを使用して説明を行います。 MQTTプラットフォームサービスにサーバアドレス、アカウント名、パスワードなどの設定情報をメモします。これらの情報はUIFlowのMQTTブロック内で使用します。 MQTTの機能 UIFlowの高級ブロックの中にMQTT機能ブロックがあります。MQTTプロトコルは\"出版\"(Publish)と\"購読\"(Subscribe)の二つのパートにわけて理解することができます。 Publisherがメッセージを送信し、それをSubscriberが受信して通信を行います。 "},"ja/MQTT/Start.html":{"url":"ja/MQTT/Start.html","title":"初期化","keywords":"","body":"初期化 MQTT設定ブロック MQTT設定ブロックを追加し、Setupブロックに接続します。 情報の記入 接続に備えて、個人用またはサードパーティプラットフォームのサーバ情報を記入してください。 注意 複数のデバイス間で通信する際、ID名（下の図では\"M5stack\"）を重複させることはできません。 MQTTプログラムを使用する場合にはダウンロードする必要があります！ MQTT Start MQTT設定ブロックの下にStartブロックを追加します。サーバの構成情報が正しければ、MQTTの実行が開始される事を意味します。 "},"ja/MQTT/Publish.html":{"url":"ja/MQTT/Publish.html","title":"Publish(出版)","keywords":"","body":"Publish(出版) 機能説明 Publish(出版)は、MQTT通信で“トピック”（topic）と“内容”（msg）の二つを含むデータを送信します。 Publish “トピック”（topic） トピックを設定します。他のデバイスがメッセージ内容を取得したい場合には、一致するトピックを購読する必要があります。 Publish “内容”（msg） Publisherは内容を設定します。 使用方法 Publishブロックが実行されるとメッセージが送信されます。例： Aボタンを押すと、次のメッセージを送信します。(トピック\"RGB\",内容\"open\") Bボタンを押すと、次のメッセージを送信します。(トピック\"RGB\",内容\"close\") "},"ja/MQTT/Subscribe.html":{"url":"ja/MQTT/Subscribe.html","title":"Subscribe(購読)","keywords":"","body":"Subscribe(購読) 機能説明 Subscribe(購読)は、MQTT通信でデータを受信するために使用します。出版者(Publisher)がメッセージを送信すると、購読者(subscriber)は登録されているトピックのメッセージの内容を受信します。 Subscribe “トピック”（topic） 購読するトピックを設定してください。 Get topic data “内容”（msg） 購読しているトピックのメッセージの内容を取得します。 使用方法 「Subscribeブロック」を追加し、購読するトピック（topic）を設定します。「Get topic dataブロック」でメッセージを分析・取得します。例： Publishから\"open\"が取得されると、RGB barを点灯し、\"close\"を取得するとRGB barを消灯します。 "},"ja/MQTT/Example.html":{"url":"ja/MQTT/Example.html","title":"使用例","keywords":"","body":"使用例 実装する機能 ひとつのCOREを用いて簡単なプログラムを作成し機能を確認してみましょう。この例ではひとつのCOREがメッセージの送信（Publisher）と受信(Subscriber)を兼任します。 ソースコード 使用方法 Aボタンを押すと、メッセージ(トピック\"RGB\",内容\"open\")が送信され、RGB barが点灯します。 Bボタンを押すと、メッセージ(トピック\"RGB\",内容\"close\")が送信され、RGB barが消灯します。 "},"ja/Units/Units.html":{"url":"ja/Units/Units.html","title":"Units","keywords":"","body":"Units Unitとは？ UnitはM5が提供する機能拡張モジュールであり、Unitはより複雑な機能を提供するハードウェア基盤です。 Unitモジュールを接続する Unitを使用してプログラミングする前に、Unitを対応するポートに接続する必要があります。 Unit Blockを追加する UIパネルのUnitsオプションをクリックし、追加するUnitモジュールをチェックし、OKをクリックします。 注：たとえばNeopixelは駆動されるライトの総数を設定できます。追加されたUnitモジュールをクリックして、プロパティボックスで編集することができます。 Unit Blockの削除 追加されたUnitモジュールをクリックし、上にあるゴミ箱にドラッグして削除します。 入力と出力 全てのUnitは入力型と出力型の２種類にわけられます。 入力型 入力型ユニットは、いくつかの環境情報の収集データをM5GOに送信します。 これらのデータを制御に利用することができます。 出力型 出力タイプのユニットは主にドライバーです。サーボでの回転制御など、外部に接続されたハードウェアを駆動する制御コアとしてM5GOを使用します。 アナログとデジタル データの種類はアナログとデジタルの２種類にわけられます。 アナログ量 アナログ量は、温度などのような連続的な量の値です。 デジタル量 デジタル量には、スイッチのように2つの状態0と1があり、スイッチのオンとオフのような量です。 "},"ja/Units/ENV.html":{"url":"ja/Units/ENV.html","title":"ENV","keywords":"","body":"ENV 機能説明 ENVは環境センサーです。周囲の温度、湿度、気圧を取得することができます。 購入リンク Block Pressure 気圧の値を取得します。 Temperature 温度の値を取得します。 Humidity 湿度の値を取得します。 使用方法 温度の値を取得して、ラベルを用いてスクリーンに表示します。 "},"ja/Units/Light.html":{"url":"ja/Units/Light.html","title":"Light","keywords":"","body":"Light 機能説明 Lightは周囲の明るさを測定することができます。アナログ値またはデジタル値をM5GOに送信します。 購入リンク Block Analog Value 明るさのアナログ値を取得します。 Digital Value 明るさのデジタル値を取得します。 使用方法 明るさが500未満のときはLEDバーを点灯させ、照度値が500より大きいときはLEDバーを消灯させます。 "},"ja/Units/PIR.html":{"url":"ja/Units/PIR.html","title":"PIR","keywords":"","body":"PIR 機能説明 人感センサーモジュールは通常時はM5GOに\"0\"を送信し、人体を感知すると信号\"1\"を送信します。 購入リンク Block Status 状態の値を取得します。 使用方法 人体感知をしたら、LEDバーを明るくします。 "},"ja/Units/Earth.html":{"url":"ja/Units/Earth.html","title":"Earth","keywords":"","body":"Earth 機能説明 Earthモジュールは土壌の水分量検出モジュールです。テストピンを土壌に挿しこみ使用します。湿度データをアナログ量またはデジタル量でM5GOに送信することができます。 購入リンク Block Analog Value 湿度をアナログ値で取得します。 Digital Value 湿度をデジタル値で取得します。閾値はUnit側で設定します。 使用方法 土壌中の湿度が15の時、音でお知らせします。 "},"ja/Units/Neopixel.html":{"url":"ja/Units/Neopixel.html","title":"Neopixel","keywords":"","body":"Neopixel 機能説明 NeopixelはプログラマブルなLEDストリップです。LEDストリップ上のLEDの数を設定した後、LEDストリップ上のRGB光をコントロールすることができます。 購入リンク Block Set index n rgb ひとつのLED駆動を制御します。 Set from a to b rgb 指定した範囲のLED駆動を制御します。 Set all rgb 全てのLED駆動を制御します。 Set brightness Neopixelの明るさを設定します。 使用方法 Neopixelの1から10番目のLEDを青色に光らせます。 "},"ja/Units/Servo.html":{"url":"ja/Units/Servo.html","title":"Servo","keywords":"","body":"Servo 機能説明 サーボはプログラムによって角度を指定して回転制御することができます（0~180度） Block rotate 回転角度を指定します。 write パルス時間を設定します。（より正確な制御ができます。） 使用方法 はじめに90度回転させ、1秒後に60度回転させます。 "}}