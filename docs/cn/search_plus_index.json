{"./":{"url":"./","title":"UIFlow","keywords":"","body":"UIFlow 欢迎使用UIFlow,访问地址 flow.m5stack.com UIFlow是什么： 一个基于Web的编程工具 使用Blockly可视化编程语言 Blockly无缝切换Python代码 "},"zh_CN/base/Update.html":{"url":"zh_CN/base/Update.html","title":"更新固件","keywords":"","body":"更新固件 For Window 下载驱动程序 访问m5stack.com下载与自己操作系统对应的CP210X驱动程序 安装驱动程序 解压压缩包后，选择对应操作系统位数的安装包进行安装 ————————————————————————————————— 下载M5Burner 访问flow.m5stack.com下载最新的固件包和M5Burner烧录工具 开始烧录 解压压缩包后，双击打开Burner烧录工具，选择对应的COM口，波特率（烧录的速率建议921600），以及你想更新的固件版本 For Mac 敬请期待.... "},"zh_CN/base/Setting_WIFI.html":{"url":"zh_CN/base/Setting_WIFI.html","title":"配置WIFI","keywords":"","body":"配置WIFI "},"zh_CN/base/setting_APIkey.html":{"url":"zh_CN/base/setting_APIkey.html","title":"API Key","keywords":"","body":"配置API Key 进入编程模式 开机后，在主菜单选择编程模式 填写API Key 点击页面右上角的菜单栏中的设置按钮，输入对应M5GO上的API Key，点击OK保存 "},"zh_CN/base/UIFlow.html":{"url":"zh_CN/base/UIFlow.html","title":"UIFlow布局","keywords":"","body":"UIFlow布局 UIFlow的布局主要分为5大版块 编程区域 拖动列表里的Block到右边区域中进行拼接，即可搭建程序 菜单栏 菜单栏中放置了一些基本操作选项（Example例程库，撤销操作，恢复，运行，下载程序，远程二维码等） BlocklyPyhon 将Blockly程序切换成Python代码 UI模拟器 拖动左上角元素选项到屏幕上，快速绘制图形 Units 拓展Unit模块来丰富程序的功能 "},"zh_CN/base/Run_Program.html":{"url":"zh_CN/base/Run_Program.html","title":"运行，下载程序","keywords":"","body":"运行，下载程序 运行程序 在编程区域，编辑好程序后，点击页面右上角的运行按钮，M5GO就会接收推送，开始执行程序 下载程序 下载程序与运行程序的区别在于，下载会将程序保存到M5GO的内存中，并且在开机时默认运行，而运行程序只是单次，一旦重启就没有了，就像是一次测试，在实际编程中，会经常使用运行来检测的程序的效果 "},"zh_CN/Start_programming/Start_programming.html":{"url":"zh_CN/Start_programming/Start_programming.html","title":"开始编程","keywords":"","body":"开始编程 经过上一章节的学习， 你已经对M5GO及UIFlow的一些基本操作有了初步认知，接下来让我们开始编程吧！ "},"zh_CN/Start_programming/Program_structure.html":{"url":"zh_CN/Start_programming/Program_structure.html","title":"程序的结构","keywords":"","body":"程序的结构 Setup块 当打开UIFlow的时候，你会发现最开始就已经有一个Setup块，每个程序都必须有一个Setup块，程序是从Setup块开始运行的，并且只会运行一次，你可以把它看作一个程序的的初始化块 Loop块 Loop是一个无限循环块，当执行到它时，它会无限循环执行包含在块中的程序，直到发生一些事件使他停止，例如M5GO关机，程序中它不是必须存在的，但为了让程序持续的运行，或是实现某些功能时，你可以添加它 程序连接 程序块之间可以通过块上的嵌口进行连接，就像拼图一样的操作方式 程序执行顺序 程序是由上往下执行，当程序开始运行，首先进入Setup单次执行初始化程序，然后进入Loop中不断循环主程序 "},"zh_CN/Start_programming/Button.html":{"url":"zh_CN/Start_programming/Button.html","title":"Button","keywords":"","body":"Button 功能说明 M5GO提供了三个面板按钮（A,B,C），通过Button Block，我们可以使用这三个按钮去实现控制 主动Button 由M5GO面板上的物理按键直接控制 被动Button 可以由程序去触发按键，配合主动Button使用可以实现更多功能 使用方法 将按下按钮后需要运行的程序，放到Button Block中，修改对应的按键位 "},"zh_CN/Start_programming/Wait.html":{"url":"zh_CN/Start_programming/Wait.html","title":"Wait","keywords":"","body":"Wait 功能说明 Wait是Timer选项中的一个延时Block，可以设定Wait执行的时间，并根据需求添加到程序中 Wait 修改数据框中的数字，更改Wait延时的时间 使用方法 将Wait Block添加到需要延时的程序之间并设定时间，在程序执行到它时，就会发挥延时作用 "},"zh_CN/Hardwares/Hardwares.html":{"url":"zh_CN/Hardwares/Hardwares.html","title":"控制硬件","keywords":"","body":"Hardwares "},"zh_CN/Hardwares/Speaker.html":{"url":"zh_CN/Hardwares/Speaker.html","title":"Speaker","keywords":"","body":"Speaker 功能说明 驱动Speaker发出声音，使用不同的Speaker Block能够控制声音的频率，持续时间，音量，音调和节拍 Speaker.beep 调节频率,和持续时间 Speaker.volume 调节音量 play.tone 调节音量与节拍 注意 由于一般人的听力范围在20~20KHz，所以当你将频率设置得过低，或过高时，是听不到它的声音的 使用方法 将所需的Speaker Block添加到程序中，修改属性或参数，使M5GO发出不同的声音 "},"zh_CN/Hardwares/RGB.html":{"url":"zh_CN/Hardwares/RGB.html","title":"RGB","keywords":"","body":"RGB 功能说明 驱动Speaker发出声音，使用不同的Speaker Block能够控制声音的频率，持续时间，音量，音调和节拍 Set Rgb Bar color 设定两侧RGB灯颜色 Set left side Rgb Bar color 设定左右单侧RGB灯颜色 Set the 1st Rgb colr 设定单个RGB灯颜色 Set Rgb brightness 设定RGB灯的亮度值 使用方法 将所需的Speaker Block添加到程序中，当程序执行到它时，则会运行对应的功能 "},"zh_CN/Hardwares/IMU.html":{"url":"zh_CN/Hardwares/IMU.html","title":"IMU","keywords":"","body":"IMU 功能说明 IMU Block是M5GO的陀螺仪姿态数据采集，它会分别采集X，Y，Z三个坐标轴的坐标数据，通过数据可以编程当M5GO处于不同姿态时，实现不同的功能 Get X 获取陀螺仪的X坐标数据 Get Y 获取陀螺仪的Y坐标数据 Get Z 获取陀螺仪的Z坐标数据 使用方法 使用标签显示采集到的数据，或是将数据用作运算或逻辑判断 "},"zh_CN/Display/Dispaly.html":{"url":"zh_CN/Display/Dispaly.html","title":"图像显示","keywords":"","body":"图像显示 "},"zh_CN/Display/Emoji.html":{"url":"zh_CN/Display/Emoji.html","title":"Emoji","keywords":"","body":"Emoji 功能说明 UIFlow提供可以快速绘制图案的像素点编辑Block，通过拼凑像素点的形式可以绘制各种各样的图案 Set emoji map in 设置方阵像素点，勾选方阵中的小方格对应显示对应的像素点 Set line x row x in 设置单个像素点，选择行与列，对应显示对应的单个像素点 使用方法 将Emoji Block添加到程序中，勾选小方格激活像素点 "},"zh_CN/Display/UI.html":{"url":"zh_CN/Display/UI.html","title":"几何图形","keywords":"","body":"几何图形 功能说明 UIFlow提供了几种可编辑的几何图形，可以用它们去绘制一些图案 Title 显示一个标题栏 Label 显示一个文本框 Rect 显示一个矩形 Circle 显示一个圆形 image 显示一张图片 添加与删除 添加元素 删除元素 编辑元素 方法一：在往屏幕中添加元素后，单击元素，在弹出的属性框中，可以设定初始参数（坐标，颜色，长宽等） 方法二：在往屏幕中添加元素后，点击UI选项，使用对应的程序Block，可以在程序中对元素进行操作 "},"zh_CN/Display/image.html":{"url":"zh_CN/Display/image.html","title":"image图片显示","keywords":"","body":"image图片显示 功能说明 添加一些本地图片，到屏幕上显示（添加要求：大小为25K以下，格式为jpg或bmp） 添加图片 首先用APIKey建立起设备与UIFlow的连接，点击页面右上角的云保存按钮，点击image选项，点击Add image从本地添加图片，等待图片上传完成 显示图片 拖动一个image元素到屏幕上，单击元素，在弹出的属性框中选择显示的图片 图片操作 除了在属性框中对image进行编辑以外，可以添加UI选项中的image Block在程序中进行操作 "},"zh_CN/Display/Graphic.html":{"url":"zh_CN/Display/Graphic.html","title":"Graphic绘图","keywords":"","body":"Graphic绘图 "},"zh_CN/Variables/Variables.html":{"url":"zh_CN/Variables/Variables.html","title":"引入变量","keywords":"","body":"引入变量 什么是变量？ 变量就像是一个容器，我们可以给变量取一个名字，可以用它来存储数据，也可以读取它，或是改变它，在实际编程中会经常运用到变量 创建变量 点击Create variable选项，输入变量的名称，点击确定创建 使用变量 例如：将变量赋初值A=6，经过一秒后将变量加2 "},"zh_CN/Operation/Operation.html":{"url":"zh_CN/Operation/Operation.html","title":"数据运算","keywords":"","body":"数据运算 "},"zh_CN/Operation/Math.html":{"url":"zh_CN/Operation/Math.html","title":"基本运算","keywords":"","body":"基本运算 功能说明 Math中有一些基本的运算Block，像是“加减乘除幂运算”等 常量 填写任意数字，然后连接到其他的对象上用作赋值 常用运算 在式子的两边添加数据进行加减乘除幂运算 求余 在式子两边添加数据，进行求余 特殊数判断 添加一个数值，设定判断是否为成立（例如判断是否为奇数或偶数或质数），符合时为True，否则为False 使用方法 在运算式子两边添加数据，将运算式子赋给一个变量或其他对象，获取结果 "},"zh_CN/Operation/Random.html":{"url":"zh_CN/Operation/Random.html","title":"随机数","keywords":"","body":"随机数 功能说明 在制作游戏或是动画时，我们有时候会需要一些随机的元素，Random可以按照我们的需求生成随机数字 常量 填写任意数字，然后连接到其他的对象上用作赋值 常用运算 在式子的两边添加数据进行加减乘除幂运算 求余 在式子两边添加数据，进行求余 特殊数判断 添加一个数值，设定判断是否为成立（例如判断是否为奇数或偶数或质数），符合时为True，否则为False 使用方法 在运算式子两边添加数据，将运算式子赋给一个变量或其他对象，获取结果 "},"zh_CN/Operation/List.html":{"url":"zh_CN/Operation/List.html","title":"引入数组","keywords":"","body":"使用变量 "},"zh_CN/Logic/Logic.html":{"url":"zh_CN/Logic/Logic.html","title":"逻辑判断","keywords":"","body":"逻辑判断 "},"zh_CN/Logic/if.html":{"url":"zh_CN/Logic/if.html","title":"if判断","keywords":"","body":"if判断 功能说明 if判断Block，会根据判断条件是否成立，决定是否运行程序，或是根据情况选择运行不同的程序 if 判断条件是否成立，当成立时执行Do右侧程序 if else 判断条件是否成立，当成立时执行Do，不成立时执行else true 布尔值可以代替判断条件的式子，设置为true为成立，设置false为不成立 使用方法 将if Block添加到程序中，添加判断条件，添加条件成立，与不成立时的执行程序,例：当M5GO站立时点亮RGB bar "},"zh_CN/Logic/logic_partA.html":{"url":"zh_CN/Logic/logic_partA.html","title":"逻辑关系式","keywords":"","body":"逻辑关系式 功能说明 逻辑关系式在if判断中经常用作判断条件，运算两侧的数据关系是否正确，最后得出true或false两个值，用作if判断 使用方法 用数据建立一个关系式，并连接到if Block上用作判断条件，例：当陀螺仪X坐标大于90时，点亮RGB bar "},"zh_CN/Logic/logic_partB.html":{"url":"zh_CN/Logic/logic_partB.html","title":"逻辑运算","keywords":"","body":"逻辑运算 功能说明 对两个逻辑关系式进行“与，或，非”的逻辑运算 and 当左右两个逻辑关系式 都成立 时，逻辑运算的结果才为True，否则为False or 当左右两个逻辑关系式 有一个成立 时，逻辑运算的结果为True，否则为False not 将一个式子的逻辑结果取反，即notTrue=False，notFalse=True 使用方法 将需要进行逻辑运算的关系式，添加到两侧，修改运算类型 "},"zh_CN/Loops/Loops.html":{"url":"zh_CN/Loops/Loops.html","title":"循环迭代","keywords":"","body":"循环迭代 "},"zh_CN/Loops/repeatA.html":{"url":"zh_CN/Loops/repeatA.html","title":"条件循环","keywords":"","body":"条件循环 "},"zh_CN/Loops/repeatB.html":{"url":"zh_CN/Loops/repeatB.html","title":"数据迭代","keywords":"","body":"数据迭代 "},"zh_CN/Functions/Functions.html":{"url":"zh_CN/Functions/Functions.html","title":"函数功能","keywords":"","body":"函数功能 什么是变量？ 函数就像是一个包裹，我们可以给函数取一个名字，在函数里放入程序，当函数被调用时，它就运行它包含在内的程序，在有多段程序重复的时候，使用函数可以节省程序的长度，同时使程序更加的简洁明了，同时方便修改 创建函数 点击Functions选项，拖动函数体到编程区域，并修改函数名称，往函数里放置程序 使用函数 当添加函数体到编程区域中后，在Functions选项里会出现一个函数调用的Block，将它添加到程序 中去 "},"zh_CN/Remote/Remote.html":{"url":"zh_CN/Remote/Remote.html","title":"远程控制","keywords":"","body":"远程控制 功能说明 通过手机或电脑等设备进行远程控制M5GO Remote QRcode 生成一个可以访问控制页面的二维码，并显示在屏幕上 Remote Switch 远程开关控制，使用前请点击Block上的齿轮按钮添加一个变量X，当控制时，闭合X传入1，断开X传入0 Remote Button 远程按钮控制，每点击一次按钮，则执行一次Block里的程序 Remote Slider 滑动条控制（使用前请点击Block上的齿轮按钮添加一个变量X，随着滑动X传入0~100的整数） Remote Label 显示信息，可以选择一些内置提供的标签类型，或是输入自定义的文本 使用方法 添加一个二维码生成Block到程序中，添加Remote Button，放置要运行的程序到块中，运行程序 控制页面 扫描M5GO屏幕上的二维码，或在UIFlow页面右上角的二维码选项下复制链接，访问控制页面 "}}